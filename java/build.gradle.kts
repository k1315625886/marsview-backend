/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    `java-library`
    `maven-publish`
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

val hutool_version by extra("5.8.26")
val alibaba_druid_version by extra("1.2.20")
val alibaba_fastjson_version by extra("2.0.41")
val mybatis_plus_version by extra("3.5.5")
//val qiniu_sdk_version by extra("[7.16.0, 7.16.99]")
val io_github_yangshare_simplefs_version by extra("1.0.6")
val javax_servlet_api_version by extra("4.0.1")
val mysql_connector_java_version by extra("8.0.33")
val commons_lang3_version by extra("3.17.0")
val lombok_version by extra("1.18.34")
val spring_boot_starter_verson by extra("3.3.4")

dependencies {
    //java 便捷工具类 https://doc.hutool.cn/pages/index/
    api("cn.hutool:hutool-all:${hutool_version}")
    //json格式化工具
    api("com.alibaba:fastjson:${alibaba_fastjson_version}")
    //mybatis-plus
    api("com.baomidou:mybatis-plus-extension:${mybatis_plus_version}")
    api("com.baomidou:mybatis-plus-spring-boot3-starter:${mybatis_plus_version}")

    //数据库多数据源
    api("com.alibaba:druid-spring-boot-starter:${alibaba_druid_version}")
    api("mysql:mysql-connector-java:${mysql_connector_java_version}")


    api("org.apache.commons:commons-lang3:${commons_lang3_version}")
    //OSS工具类
    api("io.github.yangshare:simpleFS:${io_github_yangshare_simplefs_version}"){
        exclude(group = "com.aliyun" , module = "aliyun-java-sdk-core" )
        exclude(group = "org.bouncycastle" , module = "bcprov-jdk15on" )
        exclude(group = "org.apache.commons" , module = "commons-lang3" )
        exclude(group = "com.alibaba" , module = "fastjson" )
        exclude(group = "javax.xml.bind" , module = "jaxb-api" )
    }

    //springboot 相关
    api("org.springframework.boot:spring-boot-starter-data-redis:${spring_boot_starter_verson}")
    api("org.springframework.boot:spring-boot-starter-mail:${spring_boot_starter_verson}")
    api("org.springframework.boot:spring-boot-starter-test:${spring_boot_starter_verson}")
    api("org.springframework.boot:spring-boot-starter-web:${spring_boot_starter_verson}")
    //lombok
    compileOnly("org.projectlombok:lombok:${lombok_version}")
    //
    compileOnly("javax.servlet:javax.servlet-api:${javax_servlet_api_version}")
}

group = "com.marsview"
version = "0.0.1-SNAPSHOT"
description = "marsview4j"
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}
